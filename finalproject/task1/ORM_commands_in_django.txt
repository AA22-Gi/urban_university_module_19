1. Создание объектов (INSERT)
    1) create(): Создает и сохраняет новый объект в базе данных.
       new_user = Buyer.objects.create(name='John Doe', balance=100.00, age=25)

    2) save(): Создает новый объект или обновляет существующий,
       если объект уже существует (требует предварительного создания экземпляра модели).

       user = Buyer(name='Jane Doe', balance=50.00, age=30)
       user.save()  # Сохранит новый объект


2. Чтение объектов (SELECT)
    3) all(): Возвращает все объекты модели.
       all_users = Buyer.objects.all()

    4) filter(): Возвращает объекты, соответствующие заданным критериям.
       adult_users = Buyer.objects.filter(age__gte=18)  # Пользователи старше 18 лет

    5) get(): Возвращает единственный объект, соответствующий критериям.
       Вызывает исключение, если объект не найден или найдено несколько объектов.

       user = Buyer.objects.get(name='John Doe')

    6) exclude(): Возвращает объекты, которые не соответствуют заданным критериям.
       non_adult_users = Buyer.objects.exclude(age__gte=18)  # Пользователи младше 18 лет

    7) order_by(): Сортирует результаты по заданному полю.
       sorted_users = Buyer.objects.all().order_by('age')  # Сортировка по возрасту


3. Обновление объектов (UPDATE)
    8) update(): Обновляет все объекты, соответствующие критериям, без необходимости загружать их в память.
       Buyer.objects.filter(age__lt=18).update(balance=0)  # Обновление баланса для пользователей младше 18 лет

    9) save(): Для обновления конкретного объекта сначала его нужно получить, затем изменить нужные поля и сохранить.
       user = Buyer.objects.get(name='John Doe')
       user.balance = 150.00
       user.save()  # Сохранение изменений


4. Удаление объектов (DELETE)
    10) delete(): Удаляет объекты из базы данных.
    user = Buyer.objects.get(name='John Doe')
    user.delete()  # Удаление конкретного пользователя

    11) filter().delete(): Удаляет все объекты, соответствующие заданным критериям.
        Buyer.objects.filter(age__lt=18).delete()  # Удаление всех пользователей младше 18 лет


5. Другие методы
    12) exists(): Проверяет, существуют ли объекты, соответствующие заданным критериям.
        if Buyer.objects.filter(name='John Doe').exists():
            print("Пользователь существует.")

    13) count(): Возвращает количество объектов, соответствующих критериям.
        total_users = Buyer.objects.count()  # Общее количество пользователей

    14) distinct(): Возвращает уникальные объекты.
        unique_users = Buyer.objects.distinct('age')  # Уникальные значения возраста
